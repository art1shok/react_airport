{"version":3,"sources":["components/DatePanel.js","helpers/statusDef.js","components/FlightRow.js","components/FlightList.js","helpers/localHistory.js","App.js","api/getFlights.js","index.js"],"names":["DatePanel","_ref","location","history","_useState","useState","_useState2","Object","slicedToArray","isDayActiveButton","setActiveButton","m","Date","getMonth","y","getFullYear","search","URLSearchParams","setDate","value","set","concat","push","toString","react_default","a","createElement","className","data-toggle","type","name","id","checked","onClick","getDate","statusDefinition","status","statusTime","getHours","getMinutes","slice","FlightRow","term","localTime","destination","flightCode","map","air","key","codeShare","alt","airline","en","src","logoSmallName","code","defaultProps","FlightList","departuresData","activeLink","scope","flight","components_FlightRow","ID","timeDepExpectCalc","timeToStand","timeTakeofFact","timeDepFact","codeShareData","localHistory","date","get","indexOf","App","setDeparturesData","_useState3","_useState4","arrivalsData","setArrivalsData","_useState5","_useState6","setActiveLink","_useState7","_useState8","day","setDay","filterFlightsByDay","filter","item","actual","useEffect","d","res","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getFlights","then","body","departure","arrival","react_router_dom","to","activeClassName","role","aria-label","react_router","path","render","Fragment","components_DatePanel","components_FlightList","_ref2","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cd2ccfcc.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst DatePanel = ({ location, history }) => {\n  const [isDayActiveButton, setActiveButton] = useState('today');\n  const m = new Date().getMonth() + 1;\n  const y = new Date().getFullYear();\n\n  const search = new URLSearchParams(location.search);\n  const setDate = (value) => {\n    search.set('date', `${value}-${m}-${y}`);\n    history.push({ search: search.toString() });\n  };\n\n  return (\n    <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n      <label\n        className={\n          isDayActiveButton === 'yesterday'\n            ? 'btn btn-secondary active'\n            : 'btn btn-secondary'\n        }\n      >\n        <input\n          type=\"radio\"\n          name=\"options\"\n          id=\"option1\"\n          checked\n          onClick={() => {\n            setDate(new Date().getDate() - 1);\n            setActiveButton('yesterday');\n          }}\n        />\n        Yesterday\n      </label>\n      <label\n        className={\n          isDayActiveButton === 'today'\n            ? 'btn btn-secondary active'\n            : 'btn btn-secondary'\n        }\n      >\n        <input\n          type=\"radio\"\n          name=\"options\"\n          id=\"option2\"\n          onClick={() => {\n            setDate(new Date().getDate());\n            setActiveButton('today');\n          }}\n        />\n        Today\n      </label>\n      <label\n        className={\n          isDayActiveButton === 'tomorrow'\n            ? 'btn btn-secondary active'\n            : 'btn btn-secondary'\n        }\n      >\n        <input\n          type=\"radio\"\n          name=\"options\"\n          id=\"option3\"\n          onClick={() => {\n            setDate(new Date().getDate() + 1);\n            setActiveButton('tomorrow');\n          }}\n        />\n        Tomorrow\n      </label>\n    </div>\n  );\n};\n\nDatePanel.propTypes = {\n  location: PropTypes.shape({ search: PropTypes.string }).isRequired,\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n\nexport default DatePanel;\n","const statusDefinition = (status, statusTime) => {\n  switch (status) {\n    case 'DP':\n      return `Departed at ${new Date(statusTime).getHours()}:${\n        (`0${new Date(statusTime).getMinutes()}`).slice(-2)}`;\n    case 'CX':\n      return `Cancelled`;\n    case 'LN':\n      return `Landed ${new Date(statusTime).getHours()}:${\n        (`0${new Date(statusTime).getMinutes()}`).slice(-2)}`;\n    case 'FR':\n      return 'In fly';\n    case 'ON':\n      return 'On time';\n    case 'CK':\n      return 'Check-in';\n    case 'GC':\n      return 'Gate close';\n    case 'BD':\n      return 'Begin departure';\n    default:\n      return '👀‍‍';\n  }\n};\n\nexport default statusDefinition;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport statusDefinition from '../helpers/statusDef';\n\nconst FlightRow = ({\n  term,\n  localTime,\n  destination,\n  statusTime,\n  flightCode,\n  status,\n}) => (\n  <tr>\n    <td>{term}</td>\n    <td>\n      {`${new Date(localTime).getHours()}:${(`0${new Date(localTime)\n        .getMinutes()}`).slice(-2)}`}\n    </td>\n    <td>{destination}</td>\n    <td>{statusDefinition(status, statusTime)}</td>\n    <td>\n      {flightCode.map(air => (\n        <li key={air.codeShare}>\n          <img\n            alt={air.airline.en.name}\n            src={air.airline.en.logoSmallName}\n            className=\"airlineLogo\"\n          />\n          {air.airline.en.name}\n        </li>\n      ))}\n    </td>\n    <td>\n      {flightCode.map(code => <li key={code.codeShare}>{code.codeShare}</li>)}\n    </td>\n  </tr>\n);\n\nFlightRow.propTypes = {\n  term: PropTypes.string,\n  localTime: PropTypes.string,\n  destination: PropTypes.string,\n  statusTime: PropTypes.string,\n  flightCode: PropTypes.arrayOf(PropTypes.object),\n  status: PropTypes.string,\n}.isRequired;\n\nFlightRow.defaultProps = {\n  statusTime: '',\n};\n\nexport default FlightRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlightRow from './FlightRow';\n\nconst FlightList = ({ departuresData, activeLink }) => (\n  <table className=\"table table-hover\">\n    <thead className=\"tableTitle\">\n      <tr className=\"tableTitle__row\">\n        <th scope=\"col\">Terminal</th>\n        <th scope=\"col\">Local time</th>\n        <th scope=\"col\">Destination</th>\n        <th scope=\"col\">Status</th>\n        <th scope=\"col\">Airline</th>\n        <th scope=\"col\">Flight</th>\n      </tr>\n    </thead>\n    <tbody>\n      {departuresData.map(flight => (\n        <FlightRow\n          key={flight.ID}\n          term={flight.term}\n          localTime={\n            activeLink === 'departures'\n              ? flight.timeDepExpectCalc\n              : flight.timeToStand\n          }\n          destination={\n            activeLink === 'departures'\n              ? flight['airportToID.city_en']\n              : flight['airportFromID.city_en']\n          }\n          statusTime={flight.timeTakeofFact || flight.timeDepFact}\n          flightCode={flight.codeShareData}\n          status={flight.status}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n\nFlightList.propTypes = {\n  departuresData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  activeLink: PropTypes.string.isRequired,\n};\n\nexport default FlightList;\n","const localHistory = (location) => {\n  const search = new URLSearchParams(location.search);\n  let date = search.get('date');\n\n  date = date === null\n    ? new Date().getDate()\n    : date.slice(0, date.indexOf('-'));\n\n  return date;\n};\n\nexport default localHistory;\n","import React, { useState, useEffect } from 'react';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport { getFlights } from './api/getFlights';\nimport DatePanel from './components/DatePanel';\nimport FlightList from './components/FlightList';\nimport localHistory from './helpers/localHistory';\n\nconst App = () => {\n  const [departuresData, setDeparturesData] = useState([]);\n  const [arrivalsData, setArrivalsData] = useState([]);\n  const [activeLink, setActiveLink] = useState('departures');\n  const [day, setDay] = useState(new Date().getDate());\n\n  const filterFlightsByDay = () => {\n    if (activeLink === 'departures') {\n      return (\n        departuresData.filter(item => new Date(item.actual).getDate() === +day)\n      );\n    }\n\n    return (\n      arrivalsData.filter(item => new Date(item.actual).getDate() === +day)\n    );\n  };\n\n  useEffect(() => {\n    getFlights()\n      .then((d) => {\n        setDeparturesData(d.body.departure);\n        setArrivalsData(d.body.arrival);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"globalLink__block\">\n        <NavLink\n          to=\"/departures\"\n          className=\"globalLink\"\n          activeClassName=\"globalLink--active\"\n          onClick={() => setActiveLink('departures')}\n        >\n          Departures\n          {' '}\n          <span role=\"img\" aria-label=\"plane\">🛫</span>\n        </NavLink>\n        <NavLink\n          to=\"/arrivals\"\n          className=\"globalLink\"\n          activeClassName=\"globalLink--active\"\n          onClick={() => setActiveLink('arrivals')}\n        >\n          Arrivals\n          {' '}\n          <span role=\"img\" aria-label=\"plane\">🛬</span>\n        </NavLink>\n      </div>\n\n      <Switch>\n        <Route\n          path=\"/departures\"\n          render={({ location, history }) => (\n            <>\n              {setDay(localHistory(location))}\n              <DatePanel location={location} history={history} />\n              <FlightList\n                departuresData={filterFlightsByDay()}\n                activeLink={activeLink}\n              />\n            </>\n          )}\n        />\n        <Route\n          path=\"/arrivals\"\n          render={({ location, history }) => (\n            <>\n              {setDay(localHistory(location))}\n              <DatePanel location={location} history={history} />\n              <FlightList\n                departuresData={filterFlightsByDay()}\n                activeLink={activeLink}\n              />\n            </>\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","export const getFlights = async() => {\n  const d = new Date().getDate();\n  const m = new Date().getMonth() + 1;\n  const y = new Date().getFullYear();\n\n  const res = await fetch(`https://api.iev.aero/api/flights/${d}-${m}-${y}`);\n\n  return res.json();\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}